{"version":3,"sources":["logo.svg","components/FlightSearchForm.js","containers/FlightSearchFormContainer.js","store/actions/rootActions.js","components/FlightResults.js","containers/FlightResultsContainer.js","App.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","FlightSearchForm","props","currentDate","Date","nextYear","setFullYear","getFullYear","react_default","a","createElement","className","Card_default","CardContent_default","index_es","onChange","onAirportChange","displayEmpty","input","OutlinedInput_default","name","value","originAirport","labelWidth","MenuItem_default","disabled","airports","map","option","key","iataCode","destinationAirport","material_ui_pickers_esm","utils","DateFnsUtils","dateFrom","onDateFromChange","format","minDate","maxDate","endDate","ampm","disableFuture","variant","emptyLabel","keyboardIcon","DateRangeOutlined_default","keyboard","clearable","dateTo","onDateToChange","startDate","Button_default","onClick","onSubmit","color","FlightSearchFormContainer","changeAirport","e","_this","target","changeDateFrom","changeDateTo","search","axios","get","getMonth","getDate","then","result","flightsSortedByPrice","data","flights","sort","b","price","setFlights","_this2","this","setAirports","FlightSearchForm_FlightSearchForm","Component","connect","state","dispatch","type","airport","direction","date","FlightResults","toFixed","currency","lowestPrice","colSpan","FlightResultsContainers","setDate","day","prices","flight","FlightResults_FlightResults","Math","min","apply","Object","toConsumableArray","App","src","logo","alt","containers_FlightSearchFormContainer","FlightResultsContainer","initialState","rootReducer","arguments","length","undefined","action","objectSpread","store","createStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0033e3bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport { Select, FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport DateRangeOutlined from '@material-ui/icons/DateRangeOutlined'\r\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\r\nimport { DatePicker } from 'material-ui-pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\nexport const FlightSearchForm = (props) => {\r\n  const currentDate = new Date();\r\n  const nextYear = new Date(new Date().setFullYear(new Date().getFullYear() + 1))\r\n\r\n  return (\r\n    <div className=\"search-form-flex-container\">\r\n      <Card className=\"search-form-card\">\r\n        <CardContent className=\"card-content\">\r\n\r\n          <FormControl>\r\n            <Select\r\n              className=\"select\"\r\n              onChange={props.onAirportChange}\r\n              displayEmpty\r\n              input={\r\n                <OutlinedInput\r\n                  name=\"origin\"\r\n                  value={props.originAirport}\r\n                  labelWidth={0}\r\n                />\r\n              }>\r\n\r\n              <MenuItem disabled value=\"\">From</MenuItem>\r\n              {props.airports.map(option => (\r\n                <MenuItem\r\n                  key={option.iataCode}\r\n                  value={option.iataCode}>\r\n                  {option.name}\r\n                </MenuItem>\r\n\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <Select\r\n              className=\"select\"\r\n              onChange={props.onAirportChange}\r\n              displayEmpty\r\n              input={\r\n                <OutlinedInput\r\n                  name=\"destination\"\r\n                  value={props.destinationAirport}\r\n                  labelWidth={0}\r\n                />\r\n              }>\r\n\r\n              <MenuItem disabled value=\"\">To</MenuItem>\r\n              {props.airports.map(option => (\r\n                <MenuItem\r\n                  key={option.iataCode}\r\n                  value={option.iataCode}>\r\n                  {option.name}\r\n                </MenuItem>\r\n\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DatePicker\r\n              className=\"date-picker\"\r\n              value={props.dateFrom}\r\n              onChange={props.onDateFromChange}\r\n              format={'dd.MM.YYYY'}\r\n              minDate={currentDate}\r\n              maxDate={props.endDate ? props.endDate : nextYear}\r\n              ampm=\"false\"\r\n              disableFuture={false}\r\n              variant=\"outlined\"\r\n              emptyLabel=\"Date from\"\r\n              keyboardIcon={<DateRangeOutlined />}\r\n              keyboard\r\n              clearable\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DatePicker\r\n              className=\"date-picker\"\r\n              value={props.dateTo}\r\n              onChange={props.onDateToChange}\r\n              format={'dd.MM.YYYY'}\r\n              minDate={props.startDate ? props.startDate : currentDate}\r\n              ampm=\"false\"\r\n              disableFuture={false}\r\n              variant=\"outlined\"\r\n              emptyLabel=\"Date to\"\r\n              keyboardIcon={<DateRangeOutlined />}\r\n              keyboard\r\n              clearable\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n\r\n          <Button\r\n            className=\"button\"\r\n            onClick={props.onSubmit}\r\n            variant=\"outlined\"\r\n            color=\"default\"\r\n          >Search</Button>\r\n          \r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { setAirports, setFlights, changeAirport, changeDateFrom, changeDateTo } from '../store/actions/rootActions'\r\nimport { FlightSearchForm } from '../components/FlightSearchForm';\r\n\r\nclass FlightSearchFormContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        axios.get('https://murmuring-ocean-10826.HEROkuapp.com/en/api/2/forms/flight-booking-selector/')\r\n            .then((result) => {\r\n                this.props.setAirports(result.data.airports);\r\n            });\r\n    }\r\n\r\n    changeAirport = (e) => {\r\n        this.props.changeAirport(e.target.value, e.target.name);\r\n    }\r\n\r\n    changeDateFrom = (e) => {\r\n        this.props.changeDateFrom(e);\r\n    }\r\n\r\n    changeDateTo = (e) => {\r\n        this.props.changeDateTo(e);\r\n    }\r\n\r\n    search = () => {\r\n        axios.get('https://murmuring-ocean-10826.herokuapp.com/en/api/2/flights/from/' +\r\n            this.props.originAirport + '/to/' + this.props.destinationAirport + '/' +\r\n            this.props.dateFrom.getFullYear() + '-' + (this.props.dateFrom.getMonth() + 1) + '-' + this.props.dateFrom.getDate() + '%20/' +\r\n            this.props.dateTo.getFullYear() + '-' + (this.props.dateTo.getMonth() + 1) + '-' + this.props.dateTo.getDate() +\r\n            '/250/unique/?limit=15&amp;offset-0')\r\n            .then((result) => {\r\n                const flightsSortedByPrice = result.data.flights.sort((a, b) => {\r\n                    return a.price - b.price\r\n                });\r\n                this.props.setFlights(flightsSortedByPrice);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.airports ?\r\n                <div>\r\n                    <FlightSearchForm\r\n                        key={new Date()}\r\n                        airports={this.props.airports}\r\n                        originAirport={this.props.originAirport}\r\n                        destinationAirport={this.props.destinationAirport}\r\n                        dateFrom={this.props.dateFrom}\r\n                        dateTo={this.props.dateTo}\r\n                        onAirportChange={this.changeAirport}\r\n                        onDateFromChange={this.changeDateFrom}\r\n                        onDateToChange={this.changeDateTo}\r\n                        onSubmit={this.search}\r\n                    />\r\n                </div> : null\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        airports: state.airports,\r\n        originAirport: state.originAirport,\r\n        destinationAirport: state.destinationAirport,\r\n        dateFrom: state.dateFrom,\r\n        dateTo: state.dateTo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAirports: (airports) => { dispatch(setAirports(airports)) },\r\n        setFlights: (flights) => { dispatch(setFlights(flights)) },\r\n        changeAirport: (airport, direction) => { dispatch(changeAirport(airport, direction)) },\r\n        changeDateFrom: (date) => { dispatch(changeDateFrom(date)) },\r\n        changeDateTo: (date) => { dispatch(changeDateTo(date)) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightSearchFormContainer)","export const setAirports = (airports) => {\r\n    return ({ type: 'SET_AIRPORTS', airports })\r\n}\r\n\r\nexport const setFlights = (flights) => {\r\n    return ({ type: 'SET_FLIGHTS', flights })\r\n}\r\n\r\nexport const changeAirport = (airport, direction) => {\r\n    return ({ type: 'CHANGE_AIRPORT', airport, direction })\r\n}\r\n\r\nexport const changeDateFrom = (date) => {\r\n    return ({ type: 'CHANGE_DATE_FROM', date })\r\n}\r\n\r\nexport const changeDateTo = (date) => {\r\n    return ({ type: 'CHANGE_DATE_TO', date })\r\n}\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../stylesheets/rootStyles.scss';\r\n\r\n\r\nexport const FlightResults = (props) => {\r\n\r\n    return (\r\n        <Card className=\"results-card\">\r\n            <CardContent >\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Price: {props.price.toFixed(2)}{props.currency}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            {(props.lowestPrice === props.price) ?\r\n                                <td className=\"label\">Lowest Price!!!</td> : <td>&nbsp;</td>\r\n                            }\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"label\">\r\n                                Date From:\r\n                             </td>\r\n                            <td className=\"value\">\r\n                                {props.dateFrom}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"label\">\r\n                                Date To:\r\n                            </td>\r\n                            <td className=\"value\">\r\n                                {props.dateTo}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n\r\n                                <Button variant=\"outlined\" className=\"button\" color=\"default\">Go somewhere</Button>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FlightResults } from '../components/FlightResults';\r\n\r\nclass FlightResultsContainers extends Component {\r\n\r\n    setDate = (date) => {\r\n        const day = (date.getDate() + 1) < 10 ? '0' + date.getDate() : date.getDate();\r\n        const month = (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\r\n        const year = date.getFullYear();\r\n\r\n        return month + '/' + day + '/' + year;\r\n    }\r\n\r\n    render() {\r\n        const prices = this.props.flights ? this.props.flights.map((flight) => flight.price) : null;\r\n        return (\r\n            this.props.flights ?\r\n                this.props.flights.map((flight) =>\r\n                    <FlightResults\r\n                        key={flight.price}\r\n                        dateFrom={this.setDate(new Date(flight.dateFrom))}\r\n                        dateTo={this.setDate(new Date(flight.dateTo))}\r\n                        price={flight.price}\r\n                        currency={flight.currency}\r\n                        lowestPrice={Math.min(...prices)}\r\n                    />) : null\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        flights: state.flights\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FlightResultsContainers)","import React, { Component } from 'react';\nimport FlightSearchFormContainer from './containers/FlightSearchFormContainer';\nimport FlightResultsContainer from './containers/FlightResultsContainer';\nimport './stylesheets/rootStyles.scss'\nimport logo from './logo.svg';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">\n          <img src={logo} alt=\"logo\" className=\"logo\"></img> Flight Finder\n        </h1>\n        <FlightSearchFormContainer />\n        <div className=\"results-flex-container\">\n          <FlightResultsContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\r\n    airports: null,\r\n    flights: null,\r\n    originAirport: '',\r\n    destinationAirport: '',\r\n    dateFrom: null,\r\n    dateTo: null\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CHANGE_AIRPORT':\r\n            switch (action.direction) {\r\n                case 'origin':\r\n                    return {\r\n                        ...state,\r\n                        originAirport: action.airport\r\n                    };\r\n\r\n                case 'destination':\r\n                    return {\r\n                        ...state,\r\n                        destinationAirport: action.airport\r\n                    };\r\n                default:\r\n                    return state;\r\n            }\r\n        case 'CHANGE_DATE_FROM':\r\n            return {\r\n                ...state,\r\n                dateFrom: action.date\r\n            };\r\n        case 'CHANGE_DATE_TO':\r\n            return {\r\n                ...state,\r\n                dateTo: action.date\r\n            };\r\n        case 'SET_AIRPORTS':\r\n            return {\r\n                ...state,\r\n                airports: action.airports\r\n            };\r\n        case 'SET_FLIGHTS':\r\n            return {\r\n                ...state,\r\n                flights: action.flights\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport  rootReducer  from './store/reducers/rootReducer'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}